@model MVCProject.Models.User



<!DOCTYPE html>
<style>
    .headerdiv {
        padding-bottom: 0px;
        text-align: center;
        font-size: 10px;
        background-color: #31302a;
    }

    body {
        font-family: Arial;
        margin: auto;
        background-color: #e0ffe9;
    }
</style>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit Users</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div style="text-align: center" class="form-horizontal">
            <div class="headerdiv">
                <img style="padding-bottom=fixed;" src="~/Content/logo_eng.png" />

            </div>
        </div>
        <br />
       
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    @if (TempData["userMSG"] != null)
                    {
                        <label style="color:red"> @TempData["userMSG"].ToString()</label>
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    @if (TempData["emailMSG"] != null)
                    {
                        <label style="color:red"> @TempData["emailMSG"].ToString()</label>
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    @if (TempData["asd"] != null)
                    {
                        <label style="color:red"> @TempData["asd"]</label>
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <br/>
                    @Html.DropDownListFor(model => model.Role, new List<SelectListItem> { new SelectListItem { Text = "Admin", Value = "Admin" }, new SelectListItem { Text = "Lecturer", Value = "Lecturer" }, new SelectListItem { Text = "Student", Value = "Student" } }, new { htmlAttributes = new { @required = "required", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <br/>
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        
    }

    <div>
        @Html.ActionLink("Back", "Index")
    </div>
</body>
</html>
